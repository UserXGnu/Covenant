// <auto-generated>
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is
// regenerated.
// </auto-generated>

namespace EasyPeasy.API.Models
{
    using Newtonsoft.Json;
    using Newtonsoft.Json.Converters;
    using System.Runtime;
    using System.Runtime.Serialization;

    /// <summary>
    /// Defines values for GrawlTaskingType.
    /// </summary>
    [JsonConverter(typeof(StringEnumConverter))]
    public enum GrawlTaskingType
    {
        [EnumMember(Value = "Assembly")]
        Assembly,
        [EnumMember(Value = "SetDelay")]
        SetDelay,
        [EnumMember(Value = "SetJItter")]
        SetJItter,
        [EnumMember(Value = "SetConneCTAttEmpts")]
        SetConneCTAttEmpts,
        [EnumMember(Value = "SetKillDate")]
        SetKillDate,
        [EnumMember(Value = "Exit")]
        Exit,
        [EnumMember(Value = "Connect")]
        Connect,
        [EnumMember(Value = "Disconnect")]
        Disconnect,
        [EnumMember(Value = "Tasks")]
        Tasks,
        [EnumMember(Value = "TaskKill")]
        TaskKill
    }
    internal static class GrawlTaskingTypeEnumExtension
    {
        internal static string ToSerializedValue(this GrawlTaskingType? value)
        {
            return value == null ? null : ((GrawlTaskingType)value).ToSerializedValue();
        }

        internal static string ToSerializedValue(this GrawlTaskingType value)
        {
            switch( value )
            {
                case GrawlTaskingType.Assembly:
                    return "Assembly";
                case GrawlTaskingType.SetDelay:
                    return "SetDelay";
                case GrawlTaskingType.SetJItter:
                    return "SetJItter";
                case GrawlTaskingType.SetConneCTAttEmpts:
                    return "SetConneCTAttEmpts";
                case GrawlTaskingType.SetKillDate:
                    return "SetKillDate";
                case GrawlTaskingType.Exit:
                    return "Exit";
                case GrawlTaskingType.Connect:
                    return "Connect";
                case GrawlTaskingType.Disconnect:
                    return "Disconnect";
                case GrawlTaskingType.Tasks:
                    return "Tasks";
                case GrawlTaskingType.TaskKill:
                    return "TaskKill";
            }
            return null;
        }

        internal static GrawlTaskingType? ParseGrawlTaskingType(this string value)
        {
            switch( value )
            {
                case "Assembly":
                    return GrawlTaskingType.Assembly;
                case "SetDelay":
                    return GrawlTaskingType.SetDelay;
                case "SetJItter":
                    return GrawlTaskingType.SetJItter;
                case "SetConneCTAttEmpts":
                    return GrawlTaskingType.SetConneCTAttEmpts;
                case "SetKillDate":
                    return GrawlTaskingType.SetKillDate;
                case "Exit":
                    return GrawlTaskingType.Exit;
                case "Connect":
                    return GrawlTaskingType.Connect;
                case "Disconnect":
                    return GrawlTaskingType.Disconnect;
                case "Tasks":
                    return GrawlTaskingType.Tasks;
                case "TaskKill":
                    return GrawlTaskingType.TaskKill;
            }
            return null;
        }
    }
}
